#!/usr/bin/env python3

from math import cos, sin
from math import pi as PI

from geometry_msgs.msg import Point, Quaternion
from nav_msgs.msg import Odometry
import rclpy
from rclpy.node import Node
from std_msgs.msg import String


class Talker(Node):
    def __init__(self):
        super().__init__('talker')
        self.odom_dt = 1.0 / 40.0
        self.theta = 0
        self.ang_vel = 1

        self.odom = Odometry()
        self.odom.header.frame_id = 'map'
        self.odom.child_frame_id = 'odom'

        self.chat_pub = self.create_publisher(String, '/chat', 1)
        self.odom_pub = self.create_publisher(Odometry, '/odom', 1)

        self.chat_timer = self.create_timer(1.0, self.publish_chat)
        self.odom_timer = self.create_timer(self.odom_dt, self.publish_odom)
        self.chat_count = 0

    def publish_chat(self):
        msg = String(data=f'hello {self.chat_count}')
        print(f'Published {msg.data}')
        self.chat_pub.publish(msg)
        self.chat_count += 1

    def publish_odom(self):
        self.theta += self.ang_vel * self.odom_dt
        r = 2.0
        pos = [r * cos(self.theta), r * sin(self.theta), 0.0]

        angle = self.theta + (PI / 2.0)
        qx = 0.0
        qy = 0.0
        qz = 1.0 * sin(angle / 2.0)
        qw = cos(angle / 2.0)

        self.odom.pose.pose.orientation = Quaternion(x=qx, y=qy, z=qz, w=qw)
        self.odom.pose.pose.position = Point(x=pos[0], y=pos[1], z=pos[2])

        self.odom_pub.publish(self.odom)


def main():
    rclpy.init()
    node = Talker()
    rclpy.spin(node)
    node.destroy_node()
    rclpy.shutdown()


if __name__ == '__main__':
    main()
